const express = require('express');
const Return = require('../models/Return');

const router = express.Router();

// üìå L·∫•y danh s√°ch tr·∫£ s√°ch
router.get('/', async (req, res) => {
  try {
    const data = await Return.find()
      .populate({ path: 'id_loans' }) // b·∫°n c√≥ th·ªÉ .select() n·∫øu mu·ªën
      .populate({ path: 'id_costumer', select: 'fullname email' })
      .populate({ path: 'id_employee', select: 'fullname email' });

    res.json(data);
  } catch (err) {
    console.error('L·ªói khi l·∫•y danh s√°ch tr·∫£ s√°ch:', err);
    res.status(500).json({ message: 'L·ªói khi l·∫•y danh s√°ch tr·∫£ s√°ch', error: err.message || err });
  }
});

// üìå Th√™m m·ªõi tr·∫£ s√°ch
router.post('/', async (req, res) => {
  try {
    const { id_loans, return_date, penalty, id_costumer, id_employee } = req.body;

    const newReturn = new Return({
      id_loans,
      return_date,
      penalty,
      id_costumer,
      id_employee
    });

    await newReturn.save();

    res.status(201).json({ message: 'Tr·∫£ s√°ch th√†nh c√¥ng!', data: newReturn });
  } catch (err) {
    console.error('L·ªói khi tr·∫£ s√°ch:', err);
    res.status(500).json({ message: 'L·ªói khi tr·∫£ s√°ch', error: err.message || err });
  }
});

// üìå Xo√° th√¥ng tin tr·∫£ s√°ch
router.delete('/:id', async (req, res) => {
  try {
    const deleted = await Return.findByIdAndDelete(req.params.id);
    if (!deleted) {
      return res.status(404).json({ message: 'Kh√¥ng t√¨m th·∫•y b·∫£n ghi ƒë·ªÉ xo√°' });
    }
    res.json({ message: 'ƒê√£ xo√° th√†nh c√¥ng!' });
  } catch (err) {
    console.error('L·ªói khi xo√° tr·∫£ s√°ch:', err);
    res.status(500).json({ message: 'L·ªói khi xo√°', error: err.message || err });
  }
});

module.exports = router;
