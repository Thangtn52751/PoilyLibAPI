const express = require('express');
const router = express.Router();
const Notification = require('../models/Notification');

// üìå L·∫•y t·∫•t c·∫£ th√¥ng b√°o
router.get('/', async (req, res) => {
    try {
        const notifications = await Notification.find().populate('id_customer','fullname email phone')
        .populate('id_employee','fullname email phone');
        res.json(notifications);
    } catch (error) {
        res.status(500).json({ message: 'L·ªói khi l·∫•y danh s√°ch th√¥ng b√°o', error });
    }
});

// üìå L·∫•y th√¥ng b√°o theo ID
router.get('/:id', async (req, res) => {
    try {
        const notification = await Notification.findById(req.params.id).populate('id_customer id_employee');
        if (!notification) return res.status(404).json({ message: 'Kh√¥ng t√¨m th·∫•y th√¥ng b√°o' });
        res.json(notification);
    } catch (error) {
        res.status(500).json({ message: 'L·ªói khi l·∫•y th√¥ng b√°o', error });
    }
});

// üìå Th√™m th√¥ng b√°o m·ªõi
router.post('/', async (req, res) => {
    try {
        const { title, content, id_customer, id_employee, create_date, status } = req.body;
        const newNotification = new Notification({ title, content, id_customer, id_employee, create_date, status });
        await newNotification.save();
        res.status(201).json({ message: 'Th√¥ng b√°o ƒë∆∞·ª£c t·∫°o th√†nh c√¥ng', newNotification });
    } catch (error) {
        res.status(500).json({ message: 'L·ªói khi t·∫°o th√¥ng b√°o', error });
    }
});

// üìå C·∫≠p nh·∫≠t th√¥ng b√°o
router.put('/:id', async (req, res) => {
    try {
        const updatedNotification = await Notification.findByIdAndUpdate(req.params.id, req.body, { new: true });
        if (!updatedNotification) return res.status(404).json({ message: 'Kh√¥ng t√¨m th·∫•y th√¥ng b√°o' });
        res.json({ message: 'C·∫≠p nh·∫≠t th√†nh c√¥ng', updatedNotification });
    } catch (error) {
        res.status(500).json({ message: 'L·ªói khi c·∫≠p nh·∫≠t th√¥ng b√°o', error });
    }
});

// üìå X√≥a th√¥ng b√°o
router.delete('/:id', async (req, res) => {
    try {
        const deletedNotification = await Notification.findByIdAndDelete(req.params.id);
        if (!deletedNotification) return res.status(404).json({ message: 'Kh√¥ng t√¨m th·∫•y th√¥ng b√°o' });
        res.json({ message: 'X√≥a th√†nh c√¥ng' });
    } catch (error) {
        res.status(500).json({ message: 'L·ªói khi x√≥a th√¥ng b√°o', error });
    }
});

module.exports = router;
