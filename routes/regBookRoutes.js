const express = require('express');
const RegBook = require('../models/RegBook');

const router = express.Router();

// 東 API L蘯･y danh sﾃ｡ch ﾄ惰ハg kﾃｽ mﾆｰ盻｣n sﾃ｡ch
router.get('/', async (req, res) => {
    try {
        const regbooks = await RegBook.find()
            .populate('id_customer', 'fullname email phone')
            .populate('id_employee', 'fullname email')
            .populate('loan_bookid.book_id', 'book_name');
        res.json(regbooks);
    } catch (error) {
        res.status(500).json({ message: 'L盻擁 khi l蘯･y danh sﾃ｡ch ﾄ惰ハg kﾃｽ', error });
    }
});

// 東 API ﾄ斉ハg kﾃｽ mﾆｰ盻｣n sﾃ｡ch
router.post('/', async (req, res) => {
    try {
        const { id_customer, loan_bookid, note } = req.body;
        const newRegBook = new RegBook({ id_customer, loan_bookid, note });
        await newRegBook.save();
        res.status(201).json({ message: 'ﾄ斉ハg kﾃｽ mﾆｰ盻｣n sﾃ｡ch thﾃnh cﾃｴng!', regbook: newRegBook });
    } catch (error) {
        res.status(500).json({ message: 'L盻擁 khi ﾄ惰ハg kﾃｽ mﾆｰ盻｣n sﾃ｡ch', error });
    }
});

// 東 API Duy盻㏄ ﾄ惰ハg kﾃｽ mﾆｰ盻｣n sﾃ｡ch
router.put('/:id', async (req, res) => {
    try {
        const { id_employee, status } = req.body;
        const updatedRegBook = await RegBook.findByIdAndUpdate(
            req.params.id, 
            { id_employee, status }, 
            { new: true }
        );
        res.json({ message: 'C蘯ｭp nh蘯ｭt tr蘯｡ng thﾃ｡i thﾃnh cﾃｴng!', regbook: updatedRegBook });
    } catch (error) {
        res.status(500).json({ message: 'L盻擁 khi c蘯ｭp nh蘯ｭt tr蘯｡ng thﾃ｡i', error });
    }
});

// 東 API Xﾃｳa ﾄ惰ハg kﾃｽ mﾆｰ盻｣n sﾃ｡ch
router.delete('/:id', async (req, res) => {
    try {
        await RegBook.findByIdAndDelete(req.params.id);
        res.json({ message: 'Xﾃｳa ﾄ惰ハg kﾃｽ mﾆｰ盻｣n sﾃ｡ch thﾃnh cﾃｴng!' });
    } catch (error) {
        res.status(500).json({ message: 'L盻擁 khi xﾃｳa ﾄ惰ハg kﾃｽ', error });
    }
});

module.exports = router;
